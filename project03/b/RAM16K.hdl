// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here.

    // Address is 14 bits: xxyyyyyyyyyyyy
    // First 2 bits select between 4 RAM4Ks
    // Next 12 are passed to that RAM4K and recurse
    DMux4Way(in=load, sel=address[0..1], a=loadA, b=loadB, c=loadC, d=loadD);

    RAM4K(in=in, load=loadA, address=address[2..13], out=outA);
    RAM4K(in=in, load=loadB, address=address[2..13], out=outB);
    RAM4K(in=in, load=loadC, address=address[2..13], out=outC);
    RAM4K(in=in, load=loadD, address=address[2..13], out=outD);

    Mux4Way16(a=outA, b=outB, c=outC, d=outD, sel=address[0..1], out=out);
}
